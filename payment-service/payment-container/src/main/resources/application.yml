server:
  port: 8182

logging:
  level:
    com.food.ordering.system: DEBUG

payment-service:
  payment-request-topic-name: payment-request
  payment-response-topic-name: payment-response

spring:
  application:
    name: payment-service
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=payment&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      platform: postgres
      mode: always
      data-locations: classpath:init-data.sql
      schema-locations: classpath:init-schema.sql


kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer #Keys are strings
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  payment-consumer-group-id: payment-topic-consumer
  restaurant-approval-consumer-group-id: restaurant-approval-topic-consumer
  auto-offset-reset: earliest #Start reading from the earliest partition
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true #Enables batch
  auto-startup: true    #Start consume data automatic
  concurrency-level: 3 #Create multiple threads
  session-timeout-ms: 10000 #Hartbeat session
  heartbeat-interval-ms: 3000 #Hartbeat signals interval
  max-poll-interval-ms: 300000 # Max time for a consumer in order to execute the logic
  max-poll-records: 500 #Maximum record to fetch in each call
  max-partition-fetch-bytes-default: 1048576 #Consumer can consume 1MB each time
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150